(function(root,factory){"use strict";if(typeof define==="function"&&define.amd){define([],function(){return(root.BotUI=factory(root))})}else{root.BotUI=factory(root)}})(typeof window!=="undefined"?window:this,function(root,undefined){"use strict";var BotUI=function(id,opts){opts=opts||{};if(!id){throw Error("BotUI: Container id is required as first argument.")}
if(!document.getElementById(id)){throw Error("BotUI: Element with id #"+id+" does not exist.")}
if(!root.Vue&&!opts.vue){throw Error("BotUI: Vue is required but not found.")}
var _botApp,_options={debug:!1,fontawesome:!0,searchselect:!0},_container,_interface={},_actionResolve,_markDownRegex={icon:/!\(([^\)]+)\)/gim,image:/!\[(.*?)\]\((.*?)\)/gim,link:/\[([^\[]+)\]\(([^\)]+)\)(\^?)/gim},_fontAwesome="https://use.fontawesome.com/ea731dcb6f.js",_esPromisePollyfill="https://cdn.jsdelivr.net/es6-promise/4.1.0/es6-promise.min.js",_searchselect="https://unpkg.com/vue-select@2.4.0/dist/vue-select.js";root.Vue=root.Vue||opts.vue;for(var prop in _options){if(opts.hasOwnProperty(prop)){_options[prop]=opts[prop]}}
if(!root.Promise&&typeof Promise==="undefined"&&!opts.promise){loadScript(_esPromisePollyfill)}
function _linkReplacer(match,$1,$2,$3){var _target=$3?"blank":"";return("<a class='botui-message-content-link' target='"+_target+"' href='"+$2+"'>"+$1+"</a>")}
function _parseMarkDown(text){return text.replace(_markDownRegex.image,"<img class='botui-message-content-image' src='$2' alt='$1' />").replace(_markDownRegex.icon,"<i class='botui-icon botui-message-content-icon fa fa-$1'></i>").replace(_markDownRegex.link,_linkReplacer)}
function loadScript(src,cb){var script=document.createElement("script");script.type="text/javascript";script.src=src;if(cb){script.onload=cb}
document.body.appendChild(script)}
function _handleAction(text){if(_instance.action.addMessage){_interface.message.human({delay:100,content:text})}
_instance.action.show=!_instance.action.autoHide}
var _botuiComponent={template:'<div class="botui botui-container" v-botui-container><div class="botui-messages-container"><div v-for="msg in messages" class="botui-message" :class="msg.cssClass" v-botui-scroll><transition name="slide-fade"><div v-if="msg.visible"><div v-if="msg.photo && !msg.loading" :class="[\'profil\', \'profile\', {human: msg.human, \'agent\': !msg.human}]"> <img :src="msg.photo" :class="[{human: msg.human, \'agent\': !msg.human}]"></div><div :class="[{human: msg.human, \'botui-message-content\': true}, msg.type]"><span v-if="msg.type == \'text\'" v-text="msg.content" v-botui-markdown></span><span v-if="msg.type == \'html\'" v-html="msg.content"></span> <iframe v-if="msg.type == \'embed\'" :src="msg.content" frameborder="0" allowfullscreen></iframe></div></div></transition><div v-if="msg.photo && msg.loading && !msg.human" :class="[\'profil\', \'profile\', {human: msg.human, \'agent\': !msg.human}]"> <img :src="msg.photo" :class="[{human: msg.human, \'agent\': !msg.human}]"></div><div v-if="msg.loading" class="botui-message-content loading"><i class="dot"></i><i class="dot"></i><i class="dot"></i></div></div></div><div class="botui-actions-container"><transition name="slide-fade"><div v-if="action.show" v-botui-scroll><form v-if="action.type == \'text\'" class="botui-actions-text" @submit.prevent="handle_action_text()" :class="action.cssClass"><i v-if="action.text.icon" class="botui-icon botui-action-text-icon fa" :class="\'fa-\' + action.text.icon"></i> <div class="input-container"><input type="text" ref="input" :type="action.text.sub_type" :step="action.text.step" :min="action.text.min" :max="action.text.max" v-model="action.text.value" class="botui-actions-text-input" :placeholder="action.text.placeholder" :size="action.text.size" :value=" action.text.value" :class="action.text.cssClass" :required="action.text.required ? true : false" @input="handle_text_change" v-focus /></div> <button type="submit" :class="{\'botui-actions-buttons-button\': !!action.text.button, \'botui-actions-text-submit\': !action.text.button}"><i v-if="action.text.button && action.text.button.icon" class="botui-icon botui-action-button-icon fa" :class="\'fa-\' + action.text.button.icon"></i> <span>{{(action.text.button && action.text.button.label) || \'Go\'}}</span></button></form><form v-if="action.type == \'select\'" class="botui-actions-select" @submit.prevent="handle_action_select()" :class="action.cssClass"><i v-if="action.select.icon" class="botui-icon botui-action-select-icon fa" :class="\'fa-\' + action.select.icon"></i><v-select v-if="action.select.searchselect && !action.select.multipleselect" v-model="action.select.value" :value="action.select.value" :placeholder="action.select.placeholder" class="botui-actions-text-searchselect" :label="action.select.label" :options="action.select.options"></v-select><v-select v-else-if="action.select.searchselect && action.select.multipleselect" multiple v-model="action.select.value" :value="action.select.value" :placeholder="action.select.placeholder" class="botui-actions-text-searchselect" :label="action.select.label" :options="action.select.options"></v-select> <select v-else v-model="action.select.value" class="botui-actions-text-select" :placeholder="action.select.placeholder" :size="action.select.size" :class="action.select.cssClass" required v-focus><option v-for="option in action.select.options" :class="action.select.optionClass" v-bind:value="option.value" :disabled="(option.value == \'\')?true:false" :selected="(action.select.value == option.value)?\'selected\':\'\'"> {{ option.text }}</option></select> <button type="submit" :class="{\'botui-actions-buttons-button\': !!action.select.button, \'botui-actions-select-submit\': !action.select.button}"><i v-if="action.select.button && action.select.button.icon" class="botui-icon botui-action-button-icon fa" :class="\'fa-\' + action.select.button.icon"></i> <span>{{(action.select.button && action.select.button.label) || \'Ok\'}}</span></button></form><div v-if="action.type == \'button\'" class="botui-actions-buttons" :class="action.cssClass"> <button type="button" :class="button.cssClass" class="botui-actions-buttons-button" v-botui-scroll v-for="button in action.button.buttons" @click="handle_action_button(event, button)"><i v-if="button.icon" class="botui-icon botui-action-button-icon fa" :class="\'fa-\' + button.icon"></i> {{button.text}}</button></div><form v-if="action.type == \'buttontext\'" class="botui-actions-text" @submit.prevent="handle_action_text()" :class="action.cssClass"><i v-if="action.text.icon" class="botui-icon botui-action-text-icon fa" :class="\'fa-\' + action.text.icon"></i> <div class="input-container"><input type="text" ref="input" :type="action.text.sub_type" :step="action.text.step" :min="action.text.min" :max="action.text.max" v-model="action.text.value" class="botui-actions-text-input" :placeholder="action.text.placeholder" :size="action.text.size" :value="action.text.value" :class="action.text.cssClass" required v-focus/></div> <button type="submit" :class="{\'botui-actions-buttons-button\': !!action.text.button, \'botui-actions-text-submit\': !action.text.button}"><i v-if="action.text.button && action.text.button.icon" class="botui-icon botui-action-button-icon fa" :class="\'fa-\' + action.text.button.icon"></i> <span>{{(action.text.button && action.text.button.label) || \'Go\'}}</span></button><div class="botui-actions-buttons" :class="action.cssClass"> <button type="button" :class="button.cssClass" class="botui-actions-buttons-button" v-for="button in action.button.buttons" @click="handle_action_button(event, button)" autofocus><i v-if="button.icon" class="botui-icon botui-action-button-icon fa" :class="\'fa-\' + button.icon"></i> {{button.text}}</button></div></form></div></transition></div></div>',data:function(){return{action:{text:{size:30,placeholder:"Write here .."},button:{},show:!1,type:"text",autoHide:!0,addMessage:!0},messages:[]}},computed:{isMobile:function(){return root.innerWidth&&root.innerWidth<=768}},methods:{handleDoneButtonState:function(event,buttons){buttons=buttons.find(function(btn){return btn.checked});var siblings=event.currentTarget.parentElement.children,lastChild=siblings[siblings.length-1];if(buttons){lastChild.innerText="Confirm";lastChild.classList.add("confirm")}else{lastChild.innerText="None of these";lastChild.classList.remove("confirm")}},handle_text_change:function(event){if(typeof this.action.text.onChange==="function"){this.action.text.onChange(this.action.text.value,event.currentTarget.parentElement)}},handle_action_button:function(event,button){for(var i=0;i<this.action.button.buttons.length;i++){if(!button.value&&this.action.multiselect){break}
if(this.action.button.buttons[i].value==button.value){if(this.action.multiselect){this.action.button.buttons[i].checked=!this.action.button.buttons[i].checked;this.handleDoneButtonState(event,this.action.button.buttons)}
if(typeof this.action.button.buttons[i].event=="function"){this.action.button.buttons[i].event(event,button)}
if(this.action.button.buttons[i].actionStop)return!1;break}}
var text=[],value=[];if(this.action.multiselect){this.action.button.buttons.forEach(button=>{if(button.checked&&button.value){text.push(button.text);value.push(button.value)}});text=text.join(", ")}else{text=button.text;value=button.value}
_handleAction(text||"None of these Symptoms");var defaultActionObj={type:"button",text:text,value:value};for(var eachProperty in button){if(button.hasOwnProperty(eachProperty)){if(eachProperty!=="type"&&eachProperty!=="text"&&eachProperty!=="value"){defaultActionObj[eachProperty]=button[eachProperty]}}}
_actionResolve(defaultActionObj)},handle_action_text:function(){if(!this.action.text.value&&this.action.text.required)return;_handleAction(this.action.text.value);_actionResolve({type:"text",value:this.action.text.value});this.action.text.value=""},handle_action_select:function(){if(this.action.select.searchselect&&!this.action.select.multipleselect){if(!this.action.select.value.value)return;_handleAction(this.action.select.value[this.action.select.label]);_actionResolve({type:"text",value:this.action.select.value.value,text:this.action.select.value.text,obj:this.action.select.value})}
if(this.action.select.searchselect&&this.action.select.multipleselect){if(!this.action.select.value)return;var values=new Array();var labels=new Array();for(var i=0;i<this.action.select.value.length;i++){values.push(this.action.select.value[i].value);labels.push(this.action.select.value[i][this.action.select.label])}
_handleAction(labels.join(", "));_actionResolve({type:"text",value:values.join(", "),text:labels.join(", "),obj:this.action.select.value})}else{if(!this.action.select.value)return;for(var i=0;i<this.action.select.options.length;i++){if(this.action.select.options[i].value==this.action.select.value){_handleAction(this.action.select.options[i].text);_actionResolve({type:"text",value:this.action.select.value,text:this.action.select.options[i].text})}}}}}};root.Vue.directive("botui-markdown",function(el,binding){if(binding.value=="false")return;el.innerHTML=_parseMarkDown(el.textContent)});root.Vue.directive("botui-scroll",{inserted:function(el){_container.scrollTop=_container.scrollHeight;el.scrollIntoView(!0)}});root.Vue.directive("focus",{inserted:function(el){el.focus()}});root.Vue.directive("botui-container",{inserted:function(el){_container=el}});_botApp=new root.Vue({components:{"bot-ui":_botuiComponent}}).$mount("#"+id);var _instance=_botApp.$children[0];function _addMessage(_msg){if(!_msg.loading&&!_msg.content){throw Error('BotUI: "content" is required in a non-loading message object.')}
_msg.type=_msg.type||"text";_msg.visible=_msg.delay||_msg.loading?!1:!0;var _index=_instance.messages.push(_msg)-1;return new Promise(function(resolve,reject){setTimeout(function(){if(_msg.delay){_msg.visible=!0;if(_msg.loading){_msg.loading=!1}}
resolve(_index)},_msg.delay||0)})}
function _checkOpts(_opts){if(typeof _opts==="string"){_opts={content:_opts}}
return _opts||{}}
_interface.message={add:function(addOpts){return _addMessage(_checkOpts(addOpts))},bot:function(addOpts){addOpts=_checkOpts(addOpts);return _addMessage(addOpts)},human:function(addOpts){addOpts=_checkOpts(addOpts);addOpts.human=!0;return _addMessage(addOpts)},get:function(index){return Promise.resolve(_instance.messages[index])},remove:function(index){_instance.messages.splice(index,1);return Promise.resolve()},update:function(index,msg){var _msg=_instance.messages[index];_msg.content=msg.content;_msg.visible=!msg.loading;_msg.loading=!!msg.loading;return Promise.resolve(msg.content)},removeAll:function(){_instance.messages.splice(0,_instance.messages.length);return Promise.resolve()}};function mergeAtoB(objA,objB){for(var prop in objA){if(!objB.hasOwnProperty(prop)){objB[prop]=objA[prop]}}}
function _checkAction(_opts){if(!_opts.action&&!_opts.actionButton&&!_opts.actionText){throw Error('BotUI: "action" property is required.')}}
function _showActions(_opts){_checkAction(_opts);mergeAtoB({type:"text",cssClass:"",autoHide:!0,addMessage:!0},_opts);_instance.action.type=_opts.type;_instance.action.cssClass=_opts.cssClass;_instance.action.autoHide=_opts.autoHide;_instance.action.addMessage=_opts.addMessage;return new Promise(function(resolve,reject){_actionResolve=resolve;setTimeout(function(){_instance.action.show=!0},_opts.delay||0)})}
_interface.action={show:_showActions,hide:function(){_instance.action.show=!1;return Promise.resolve()},text:function(_opts){_checkAction(_opts);_instance.action.text=_opts.action;return _showActions(_opts)},button:function(_opts){_checkAction(_opts);_opts.type="button";_instance.action.multiselect=_opts.multiselect||!1;_instance.action.button.buttons=_opts.action;if(_opts.multiselect){_instance.action.button.buttons.push({text:"None of these",id:""})}
return _showActions(_opts)},select:function(_opts){_checkAction(_opts);_opts.type="select";_opts.action.label=_opts.action.label||"text";_opts.action.value=_opts.action.value||"";_opts.action.searchselect=typeof _opts.action.searchselect!=="undefined"?_opts.action.searchselect:_options.searchselect;_opts.action.multipleselect=_opts.action.multipleselect||!1;if(_opts.action.searchselect&&typeof _opts.action.value=="string"){if(!_opts.action.multipleselect){for(var i=0;i<_opts.action.options.length;i++){if(_opts.action.options[i].value==_opts.action.value){_opts.action.value=_opts.action.options[i]}}}else{var vals=_opts.action.value.split(",");_opts.action.value=new Array();for(var i=0;i<_opts.action.options.length;i++){for(var j=0;j<vals.length;j++){if(_opts.action.options[i].value==vals[j]){_opts.action.value.push(_opts.action.options[i])}}}}}
if(!_opts.action.searchselect){_opts.action.options.unshift({value:"",text:_opts.action.placeholder})}
_instance.action.button=_opts.action.button;_instance.action.select=_opts.action;return _showActions(_opts)},buttontext:function(_opts){_checkAction(_opts);_opts.type="buttontext";_instance.action.button.buttons=_opts.actionButton;_instance.action.text=_opts.actionText;return _showActions(_opts)}};if(_options.fontawesome){loadScript(_fontAwesome)}
if(_options.searchselect){loadScript(_searchselect,function(){Vue.component("v-select",VueSelect.VueSelect)})}
if(_options.debug){_interface._botApp=_botApp}
return _interface};return BotUI});var botui=new BotUI("my-botui-app"),inputObj={};function reset(){botui.action.hide().then(()=>botui.message.removeAll()).then(()=>initBot())}
let point=0;const protocol=window.location.protocol;const hostname=window.location.host;const domain=protocol+"//"+hostname;const url=domain+"/"+"risk";
function initBot(){
    // inputObj={age:"",temperature:"",temperatureText:"",gender:"",genderText:"",symptoms:"",symptomsText:"",additionalSymptoms:"",additionalSymptomsText:"",exposureHistory:"",exposureHistoryText:"",underlyingConditions:"",underlyingConditionsText:"",progress:"",progressText:""};
    
    inputObj={cough:"",coughText:"",cold:"",coldText:"",diarrhea:"",diarrheaText:"",soreThroat:"",soreThroatText:"",bodyAches:"",bodyAchesText:"",headache:"",headacheText:"",fever:"",feverText:"",breathing:"", breathingText:"", fatigue:"", fatigueText:"",travelDays:"",travelDaysText:"",travelArea:"",travelAreaText:"",patientContact:"",patientContactText:""};

    botui.message.bot({delay:500,loading:!0,content:"Hi! Our coronavirus disease self assessment scan has been developed on the basis of guidelines from the WHO and MHFW, Government of India. This interaction should not be taken as expert medical advice. Any information you share with us will be kept strictly confidential."}).then(()=>{

// return botui.message.bot({delay:200,content:"How old are you?"})}).then(()=>{return botui.action.text({cssClass:"form-control",action:{sub_type:"number",placeholder:"Your age in years",required:!0,min:"0",max:"100",button:{label:"Done"}}})}).then(res=>{inputObj.age=res.value;

return botui.message.bot({delay:500,loading:!0,content:"Do you have Cough?"})}).then(()=>{return botui.action.button({delay:100,action:[{text:"No",value:"0"},{text:"Yes",value:"1"}]})}).then(res=>{inputObj.cough=res.value;inputObj.coughText=res.text;point+=Number(res.value);
return botui.message.bot({delay:500,loading:!0,content:"Do you have Colds?"})}).then(()=>{return botui.action.button({delay:100,action:[{text:"No",value:"0"},{text:"Yes",value:"1"}]})}).then(res=>{inputObj.cold=res.value;inputObj.coldText=res.text;point+=Number(res.value);
return botui.message.bot({delay:500,loading:!0,content:"Are you having Diarrhea?"})}).then(()=>{return botui.action.button({delay:100,action:[{text:"No",value:"0"},{text:"Yes",value:"1"}]})}).then(res=>{inputObj.diarrhea=res.value;inputObj.diarrheaText=res.text;point+=Number(res.value);
return botui.message.bot({delay:500,loading:!0,content:"Do you have Sore Throat?"})}).then(()=>{return botui.action.button({delay:100,action:[{text:"No",value:"0"},{text:"Yes",value:"1"}]})}).then(res=>{inputObj.soreThroat=res.value;inputObj.soreThroatText=res.text;point+=Number(res.value);
return botui.message.bot({delay:500,loading:!0,content:"Are you experiencing MYALGIA or Body Aches?"})}).then(()=>{return botui.action.button({delay:100,action:[{text:"No",value:"0"},{text:"Yes",value:"1"}]})}).then(res=>{inputObj.bodyAches=res.value;inputObj.bodyAchesText=res.text;point+=Number(res.value);
return botui.message.bot({delay:500,loading:!0,content:"Do you have Headache?"})}).then(()=>{return botui.action.button({delay:100,action:[{text:"No",value:"0"},{text:"Yes",value:"1"}]})}).then(res=>{inputObj.headache=res.value;inputObj.headacheText=res.text;point+=Number(res.value);  
return botui.message.bot({delay:500,loading:!0,content:"Do you have Fever(Temperature 37.8 C and above)"})}).then(()=>{return botui.action.button({delay:100,action:[{text:"No",value:"0"},{text:"Yes",value:"1"}]})}).then(res=>{inputObj.fever=res.value;inputObj.feverText=res.text;point+=Number(res.value);
return botui.message.bot({delay:500,loading:!0,content:"Are you having difficulty breathing?"})}).then(()=>{return botui.action.button({delay:100,action:[{text:"No",value:"0"},{text:"Yes",value:"2"}]})}).then(res=>{inputObj.breathing=res.value;inputObj.breathingText=res.text;point+=Number(res.value);
return botui.message.bot({delay:500,loading:!0,content:"Are you experiencing Fatigue?"})}).then(()=>{return botui.action.button({delay:100,action:[{text:"No",value:"0"},{text:"Yes",value:"2"}]})}).then(res=>{inputObj.fatigue=res.value;inputObj.fatigueText=res.text;point+=Number(res.value);
return botui.message.bot({delay:500,loading:!0,content:"Have you traveled recently during the past 14 days?"})}).then(()=>{return botui.action.button({delay:100,action:[{text:"No",value:"0"},{text:"Yes",value:"3"}]})}).then(res=>{inputObj.travelDays=res.value;inputObj.travelDaysText=res.text;point+=Number(res.value);
return botui.message.bot({delay:500,loading:!0,content:"Do you have travel history to a COVID-19 INFECTED AREA?"})}).then(()=>{return botui.action.button({delay:100,action:[{text:"No",value:"0"},{text:"Yes",value:"3"}]})}).then(res=>{inputObj.travelArea=res.value;inputObj.travelAreaText=res.text;point+=Number(res.value);
return botui.message.bot({delay:500,loading:!0,content:"Do you have direct contact or is taking care of a positive COVID-19 PATIENT?"})}).then(()=>{return botui.action.button({delay:100,action:[{text:"No",value:"0"},{text:"Yes",value:"3"}]})}).then(res=>{inputObj.patientContact=res.value;inputObj.patientContactText=res.text;point+=Number(res.value);

// return botui.message.bot({delay:500,loading:!0,content:"Please let us know your current body temperature in degree Fahrenheit (Normal body temperature is 98.6°F):"})}).then(()=>{return botui.action.button({delay:100,action:[{text:"Normal (96°F-98.6°F)",value:"0"},{text:"Fever (98.6°F-102°F)",value:"1"},{text:"High Fever (>102°F)",value:"2"},{text:"Don’t know",value:"0"}]})}).then(res=>{inputObj.temperature=res.value;inputObj.temperatureText=res.text;
// return botui.message.bot({delay:500,loading:!0,content:"Are you experiencing any of the symptoms below (mark all those applicable)"})}).then(()=>{return botui.action.button({delay:100,cssClass:"multiselect",multiselect:!0,action:[{text:"Dry Cough",value:"0",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}},{text:"Sneezing",value:"2",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}},{text:"Sore Throat",value:"3",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}},{text:"Weakness",value:"4",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}}]})}).then(res=>{inputObj.symptoms=res.value.join("|");inputObj.symptomsText=res.text;if(inputObj.temperature==="1"){inputObj.symptoms=inputObj.temperature+(inputObj.symptoms!==""?"|":"")+inputObj.symptoms;inputObj.symptomsText=inputObj.temperatureText+(inputObj.symptoms!==""?", ":"")+inputObj.symptomsText}

// return botui.message.bot({delay:500,loading:!0,content:"Additionally, please verify if you are experiencing any of the symptoms below (mark all those applicable)"})}).then(()=>{return botui.action.button({delay:100,multiselect:!0,cssClass:"multiselect",action:[{text:"Moderate to Severe Cough",value:"0",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}},{text:"Feeling Breathless",value:"1",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}},{text:"Difficulty in Breathing",value:"3",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}},{text:"Drowsiness",value:"4",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}},{text:"Persistant Pain and Pressure in Chest",value:"5",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}},{text:"Severe Weakness",value:"6",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}}]})}).then(res=>{inputObj.additionalSymptoms=res.value.join("|");inputObj.additionalSymptomsText=res.text;if(inputObj.temperature==="2"){inputObj.additionalSymptoms=inputObj.temperature+(inputObj.additionalSymptoms!==""?"|":"")+inputObj.additionalSymptoms;inputObj.additionalSymptomsText=inputObj.temperatureText+(inputObj.additionalSymptoms!==""?", ":"")+inputObj.additionalSymptomsText}

// return botui.message.bot({delay:500,loading:!0,content:"Please select your travel and exposure details"})}).then(()=>{return botui.action.button({delay:100,action:[{text:"No Travel History",value:"0"},{text:"No contact with anyone with Symptoms",value:"1"},{text:"History of travel or meeting in affected geographical area in last 14 days",value:"2"},{text:"Close Contact with confirmed COVID in last 14 days",value:"3"}]})}).then(res=>{inputObj.exposureHistory=res.value;inputObj.exposureHistoryText=res.text;
// return botui.message.bot({delay:500,loading:!0,content:"Do you have a history of any of these conditions (mark all those applicable)"})}).then(()=>{return botui.action.button({delay:100,multiselect:!0,cssClass:"multiselect",action:[{text:"Diabetes",value:"0",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}},{text:"High Blood Pressure",value:"1",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}},{text:" Heart Disease",value:"2",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}},{text:"Kidney Disease",value:"3",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}},{text:"Lung disease",value:"4",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}},{text:"Stroke",value:"6",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}},{text:"Reduced Immunity",value:"7",actionStop:!0,event:function(event,button){event.currentTarget.classList.toggle("active")}}]})}).then(res=>{inputObj.underlyingConditions=res.value.join("|");inputObj.underlyingConditionsText=res.text;if(inputObj.symptoms===""&&inputObj.additionalSymptoms==="")return;
// return botui.message.bot({delay:500,loading:!0,content:"How have your symptoms progressed over the last 48 hrs?"})}).then(()=>{if(inputObj.symptoms===""&&inputObj.additionalSymptoms==="")return;
// return botui.action.button({delay:100,action:[{text:"Improved",value:"0"},{text:"No Change",value:"1"},{text:"Worsened",value:"2"},{text:"Worsened Considerably",value:"3"}]})}).then(res=>{inputObj.progress=res?res.value:"0";inputObj.progressText=res?res.text:"Improved";

showScore()})};
function showScore(){let body=document.getElementsByTagName("body")[0];body.classList.add("loading");return new Promise(function(resolve,reject){
    console.log("obj..",inputObj, 'point',point)
    setTimeout(()=>{body.classList.remove("loading");window.location.href=domain+"/info?score="+point;},2000)

// fetch('https://covid.apollo247.com/risk',{method:"POST",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify(inputObj)}).then(res=>{if(!res.ok){throw res};return res.json()}).then(response=>{setTimeout(()=>{body.classList.remove("loading");window.location.href=domain+"/info?score=";resolve(response)},2000)}).catch(function(error){body.classList.remove("loading");reject(error)})

})}
initBot()